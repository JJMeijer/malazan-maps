{
  "version": 3,
  "sources": ["../../src/ts/place/element-helpers.ts", "../../src/ts/place/place-marker.ts", "../../src/ts/place/zoom-and-pan-listener.ts", "../../src/ts/place/map-selector-listener.ts", "../../src/ts/place.ts"],
  "sourcesContent": ["import { NaturalDimensions, RealDimensions, ElementPaddings } from '../types';\n\nexport const extractMapId = (elementIdString: string): string => {\n    const lastKebabCaseItem = elementIdString.split('-').slice(-1);\n\n    if (lastKebabCaseItem[0]) {\n        return lastKebabCaseItem[0];\n    }\n\n    throw new Error('Map ID not found');\n};\n\nexport const getVisibleImage = (): HTMLElement | null => {\n    const visibleImageWrapper = document.querySelector('[id^=\"map-imagewrapper-\"]:not(.hidden)');\n\n    if (visibleImageWrapper) {\n        const mapId = extractMapId(visibleImageWrapper.id);\n        return document.querySelector(`#map-image-${mapId}`);\n    }\n\n    return null;\n};\n\nexport const getElementNaturalDimensions = (element: HTMLImageElement): NaturalDimensions => {\n    const { naturalHeight, naturalWidth } = element;\n\n    return {\n        naturalHeight,\n        naturalWidth,\n    };\n};\n\nexport const getElementRealDimensions = (element: HTMLElement): RealDimensions => {\n    const { width, height, top, left } = element.getBoundingClientRect();\n\n    return {\n        width,\n        height,\n        top,\n        left,\n    };\n};\n\nexport const getElementPaddings = (element: HTMLElement): ElementPaddings => {\n    const leftPadding = parseInt(\n        window.getComputedStyle(element).getPropertyValue('padding-left').replace('px', ''),\n    );\n\n    const rightPadding = parseInt(\n        window.getComputedStyle(element).getPropertyValue('padding-top').replace('px', ''),\n    );\n\n    const topPadding = parseInt(\n        window.getComputedStyle(element).getPropertyValue('padding-top').replace('px', ''),\n    );\n\n    const bottomPadding = parseInt(\n        window.getComputedStyle(element).getPropertyValue('padding-top').replace('px', ''),\n    );\n\n    return {\n        leftPadding,\n        rightPadding,\n        topPadding,\n        bottomPadding,\n    };\n};\n\nexport const setElementTransformOrigin = (element: HTMLElement): void => {\n    const { top, left } = getElementRealDimensions(element);\n    element.style.transformOrigin = `${-left}px ${-top}px`;\n};\n", "import {\n    getElementNaturalDimensions,\n    getElementRealDimensions,\n    getElementPaddings,\n    extractMapId,\n    setElementTransformOrigin,\n} from './element-helpers';\n\nexport const placeVisibleMarker = (): void => {\n    const visibleImageWrapper = document.querySelector('[id^=\"map-imagewrapper-\"]:not(.hidden)');\n\n    if (!(visibleImageWrapper instanceof HTMLDivElement)) {\n        throw new Error('Imagewrapper element is missing');\n    }\n\n    const mapId = extractMapId(visibleImageWrapper.id);\n    placeMarker(mapId);\n    setElementTransformOrigin(visibleImageWrapper);\n};\n\nexport const placeMarker = (mapId: string): void => {\n    const mapImageWrapperElement = document.getElementById(`map-imagewrapper-${mapId}`);\n    const mapImageElement = document.getElementById(`map-image-${mapId}`);\n    const mapMarkerElement = document.getElementById(`map-marker-${mapId}`);\n\n    if (!(mapImageWrapperElement instanceof HTMLDivElement)) {\n        throw new Error(`Imagewrapper for mapId ${mapId} is missing`);\n    }\n\n    if (!(mapImageElement instanceof HTMLImageElement)) {\n        throw new Error(`Image for mapId ${mapId} is missing`);\n    }\n\n    if (!(mapMarkerElement instanceof HTMLImageElement)) {\n        throw new Error(`Marker icon for mapId ${mapId} is missing`);\n    }\n\n    const mapNaturalDimensions = getElementNaturalDimensions(mapImageElement);\n    const mapRealDimensions = getElementRealDimensions(mapImageElement);\n\n    const markerRealDimensions = getElementRealDimensions(mapMarkerElement);\n\n    const { leftPadding, topPadding } = getElementPaddings(mapImageWrapperElement);\n\n    const { markerx, markery } = mapMarkerElement.dataset;\n\n    if (!markerx || !markery) {\n        throw new Error('Marker coordinates not provided');\n    }\n\n    const markerRelativeX =\n        Math.round(\n            (parseInt(markerx) * mapRealDimensions.width) / mapNaturalDimensions.naturalWidth -\n                markerRealDimensions.width / 2,\n        ) + leftPadding;\n\n    const markerRelativeY =\n        Math.round(\n            (parseInt(markery) * mapRealDimensions.height) / mapNaturalDimensions.naturalHeight -\n                markerRealDimensions.height,\n        ) + topPadding;\n\n    mapMarkerElement.style.top = `${markerRelativeY}px`;\n    mapMarkerElement.style.left = `${markerRelativeX}px`;\n\n    mapMarkerElement.classList.remove('opacity-0');\n    mapMarkerElement.classList.add('opacity-90');\n};\n", "import { setElementTransformOrigin } from './element-helpers';\n\nconst clamp = (num: number, min: number, max: number): number => Math.min(Math.max(num, min), max);\n\nconst showResetZoomButton = () => {\n    const resetButton = document.getElementById('reset-zoom-button');\n\n    if (!resetButton) {\n        throw new Error('Reset button is missing');\n    }\n\n    resetButton.classList.remove('hidden');\n};\n\nconst hideResetZoomButton = () => {\n    const resetButton = document.getElementById('reset-zoom-button');\n\n    if (!resetButton) {\n        throw new Error('Reset button is missing');\n    }\n\n    resetButton.classList.add('hidden');\n};\n\nexport const setZoomAndPanListeners = (): void => {\n    const imageWrappers = document.querySelectorAll('[id^=map-imagewrapper-]');\n\n    imageWrappers.forEach((imageWrapper) => {\n        if (!(imageWrapper instanceof HTMLDivElement)) {\n            throw new Error('element with `map-imagewrapper-` id is not a div element');\n        }\n\n        let activeTransform = false;\n        let panning = false;\n        let scale = 1;\n        let pointX = 0;\n        let pointY = 0;\n        let startX = 0;\n        let startY = 0;\n\n        const setTransform = () => {\n            imageWrapper.style.transform = `translate(${pointX}px, ${pointY}px) scale(${scale})`;\n        };\n\n        imageWrapper.onmousedown = (event) => {\n            event.preventDefault();\n            const { clientX, clientY } = event;\n\n            startX = clientX - pointX;\n            startY = clientY - pointY;\n\n            panning = true;\n        };\n\n        imageWrapper.onmouseup = () => {\n            panning = false;\n        };\n\n        imageWrapper.onmousemove = (event) => {\n            event.preventDefault();\n\n            if (!panning) {\n                return;\n            }\n\n            if (!activeTransform) {\n                showResetZoomButton();\n                activeTransform = true;\n            }\n\n            const { clientX, clientY } = event;\n\n            pointX = clientX - startX;\n            pointY = clientY - startY;\n            setTransform();\n        };\n\n        imageWrapper.onwheel = (event) => {\n            event.preventDefault();\n\n            if (!activeTransform) {\n                showResetZoomButton();\n                activeTransform = true;\n            }\n\n            const { clientX, clientY, deltaY } = event;\n\n            const xs = (clientX - pointX) / scale;\n            const ys = (clientY - pointY) / scale;\n            const delta = -deltaY;\n\n            const maxWheelDown = 6;\n            const maxWheelUp = 1;\n            const scaleFactor = 1.2;\n\n            if (delta > 0) {\n                scale = clamp(\n                    scale * scaleFactor,\n                    1 / scaleFactor ** maxWheelUp,\n                    scaleFactor ** maxWheelDown,\n                );\n            } else {\n                scale = clamp(\n                    scale / scaleFactor,\n                    1 / scaleFactor ** maxWheelUp,\n                    scaleFactor ** maxWheelDown,\n                );\n            }\n\n            pointX = clientX - xs * scale;\n            pointY = clientY - ys * scale;\n\n            setTransform();\n        };\n\n        const reset = () => {\n            panning = false;\n            scale = 1;\n            pointX = 0;\n            pointY = 0;\n            startX = 0;\n            startY = 0;\n\n            setTransform();\n            hideResetZoomButton();\n\n            activeTransform = false;\n        };\n\n        window.addEventListener('resize', () => {\n            reset();\n            setElementTransformOrigin(imageWrapper);\n        });\n\n        const mapButtons = document.querySelectorAll('input[name=\"map-selector\"]');\n        mapButtons.forEach((element) => {\n            element.addEventListener('change', reset);\n        });\n\n        const resetButton = document.getElementById('reset-zoom-button');\n\n        if (!resetButton) {\n            throw new Error('Reset button is missing');\n        }\n\n        resetButton.addEventListener('click', reset);\n    });\n};\n", "import { extractMapId, setElementTransformOrigin } from './element-helpers';\nimport { placeMarker } from './place-marker';\n\nconst handleMapSelectorChange = (event: Event) => {\n    const target = event.target as HTMLElement;\n    const mapId = extractMapId(target.id);\n\n    const mapWrappers = document.querySelectorAll('[id^=map-imagewrapper-]');\n\n    // Hide all maps\n    mapWrappers.forEach((mapWrapper) => {\n        if (!mapWrapper.classList.contains('hidden')) {\n            mapWrapper.classList.add('hidden');\n        }\n    });\n\n    // Remove hidden from selected Map\n    const selectedImageWrapper = document.getElementById(`map-imagewrapper-${mapId}`);\n\n    if (!(selectedImageWrapper instanceof HTMLElement)) {\n        throw new Error('Imagewrapper for selected map is missing');\n    }\n\n    selectedImageWrapper.classList.remove('hidden');\n\n    /**\n     * Update the transferOrigin of the element to facilitate the correct transform for the\n     * zoom & pan listener.\n     */\n    setElementTransformOrigin(selectedImageWrapper);\n\n    // Place Marker in Selected Map\n    placeMarker(mapId);\n};\n\nexport const setMapSelectorListeners = (): void => {\n    const mapButtons = document.querySelectorAll('input[name=\"map-selector\"]');\n    const mapButtonSpans = document.querySelectorAll('input[name=\"map-selector\"]~span');\n\n    mapButtons.forEach((element) => {\n        if (!(element instanceof HTMLInputElement)) {\n            throw new Error('Map Input has unexpected type');\n        }\n\n        element.addEventListener('change', (event) => {\n            handleMapSelectorChange(event);\n        });\n    });\n\n    mapButtonSpans.forEach((element) => {\n        if (!(element instanceof HTMLSpanElement)) {\n            throw new Error('Map button has unexpected type');\n        }\n\n        element.addEventListener('keydown', (event) => {\n            const { key } = event;\n\n            if (key === 'Enter') {\n                const inputSibling = element.previousElementSibling;\n\n                if (!(inputSibling instanceof HTMLInputElement)) {\n                    throw new Error('Map Button input element missing');\n                }\n\n                inputSibling.checked = true;\n\n                const changeEvent = new Event('change');\n                inputSibling.dispatchEvent(changeEvent);\n            }\n        });\n    });\n};\n", "import { getVisibleImage } from './place/element-helpers';\nimport { placeVisibleMarker } from './place/place-marker';\nimport { setZoomAndPanListeners } from './place/zoom-and-pan-listener';\nimport { setMapSelectorListeners } from './place/map-selector-listener';\n\nconst initPlacePage = (): void => {\n    placeVisibleMarker();\n    setZoomAndPanListeners();\n\n    window.addEventListener('resize', () => {\n        placeVisibleMarker();\n    });\n\n    setMapSelectorListeners();\n};\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    const visibleImage = getVisibleImage();\n\n    if (!(visibleImage instanceof HTMLImageElement)) {\n        throw new Error('No Image Available on Marker page');\n    }\n\n    if (visibleImage.complete) {\n        initPlacePage();\n    } else {\n        visibleImage.addEventListener('load', () => {\n            initPlacePage();\n        });\n    }\n});\n"],
  "mappings": "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",
  "names": []
}
