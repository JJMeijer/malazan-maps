{
  "version": 3,
  "sources": ["../ts/base.ts"],
  "sourcesContent": ["interface ResultData {\n    name: string;\n    short_name: string;\n    type: string;\n}\n\nconst focusClasses = ['focus-result', 'bg-gray-400', 'rounded-md'];\n\nconst generateLink = (short_name: string, type: string): string => {\n    return `/${type}/${short_name}`;\n};\n\nconst partialBoldString = (fullText: string, boldText: string): string => {\n    return fullText.replace(\n        new RegExp(`(${boldText})`, 'gi'),\n        `<span class=\"font-extrabold text-white\">$1</span>`,\n    );\n};\n\nconst getCurrentFocusResult = () => {\n    const element = document.querySelector('.focus-result');\n\n    if (element instanceof HTMLElement) {\n        const focusResultIndex = element.dataset['index'];\n        const focusResultName = element.dataset['name'];\n\n        if (focusResultName && focusResultIndex) {\n            return {\n                focusResultName,\n                focusResultIndex: parseInt(focusResultIndex),\n            };\n        }\n\n        throw new Error('Focussed Result had unexpected format');\n    }\n\n    return {\n        focusResultName: '',\n        focusResultIndex: 0,\n    };\n};\n\nconst unSetFocusResult = (resultIndex: number) => {\n    const element = document.querySelector(`[data-index=\"${resultIndex}\"]`);\n\n    if (element !== null) {\n        element.classList.remove(...focusClasses);\n    }\n};\n\nconst setFocusResult = (resultIndex: number) => {\n    const element = document.querySelector(`[data-index=\"${resultIndex}\"]`);\n\n    if (element !== null) {\n        element.classList.add(...focusClasses);\n    }\n};\n\nconst createSearchResult = (resultData: ResultData, query: string, index: number) => {\n    const { name, short_name, type } = resultData;\n\n    const resultWrapper = document.createElement('div');\n    resultWrapper.classList.add('flex', 'flex-col', 'p-2', 'text-md');\n    resultWrapper.setAttribute('data-index', String(index));\n    resultWrapper.setAttribute('data-name', short_name);\n\n    const resultLink = document.createElement('a');\n    resultLink.href = generateLink(short_name, type);\n    resultLink.classList.add('flex', 'flex-row');\n\n    const resultName = document.createElement('p');\n    resultName.innerHTML = partialBoldString(name, query);\n    resultName.classList.add('w-3/4', 'text-gray-200');\n\n    const resultType = document.createElement('p');\n    resultType.innerHTML = type;\n    resultType.classList.add('w-1/4', 'text-gray-200', 'opacity-50', 'text-right');\n\n    resultLink.appendChild(resultName);\n    resultLink.appendChild(resultType);\n    resultWrapper.appendChild(resultLink);\n\n    return resultWrapper;\n};\n\nconst createNoResult = (): HTMLElement => {\n    const wrapper = document.createElement('div');\n    wrapper.classList.add(...['p-2', 'text-md', 'text-gray-200', 'w-full']);\n\n    const text = document.createElement('p');\n    text.innerHTML = 'No Results';\n\n    wrapper.appendChild(text);\n\n    return wrapper;\n};\n\nconst handleSearch = (event: Event, searchResultsBox: HTMLElement) => {\n    if (!(event.target instanceof HTMLInputElement)) {\n        throw new Error('Unexpected target of search input event.');\n    }\n\n    const { value } = event.target;\n    const { focusResultName } = getCurrentFocusResult();\n    const { entries } = window.malazan;\n\n    searchResultsBox.innerHTML = '';\n\n    if (value.length > 0) {\n        const results = entries.filter(({ name }) => {\n            return name.match(new RegExp(value, 'i'));\n        });\n\n        const resultElements = results.map((result, index) => {\n            return createSearchResult(result, value, index);\n        });\n\n        const HAS_RESULT = resultElements.length > 0;\n\n        if (HAS_RESULT) {\n            resultElements.forEach((element) => searchResultsBox.appendChild(element));\n\n            const recycledResulFocusIndex = results.findIndex(\n                ({ short_name }) => short_name === focusResultName,\n            );\n\n            if (recycledResulFocusIndex > -1) {\n                setFocusResult(recycledResulFocusIndex);\n            }\n\n            if (recycledResulFocusIndex === -1) {\n                setFocusResult(0);\n            }\n        }\n\n        if (!HAS_RESULT) {\n            const noResultElement = createNoResult();\n            searchResultsBox.appendChild(noResultElement);\n        }\n\n        searchResultsBox.classList.remove('hidden');\n    }\n\n    if (value.length === 0) {\n        searchResultsBox.classList.add('hidden');\n    }\n};\n\nconst handleKeys = (event: KeyboardEvent, searchResultsBox: HTMLElement): void => {\n    const { key } = event;\n\n    if (key === 'ArrowDown') {\n        const { focusResultIndex } = getCurrentFocusResult();\n\n        if (focusResultIndex < searchResultsBox.children.length) {\n            unSetFocusResult(focusResultIndex);\n            setFocusResult(focusResultIndex + 1);\n        }\n    }\n\n    if (key === 'ArrowUp') {\n        const { focusResultIndex } = getCurrentFocusResult();\n\n        if (focusResultIndex > 0) {\n            unSetFocusResult(focusResultIndex);\n            setFocusResult(focusResultIndex - 1);\n        }\n    }\n};\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    const searchBox = document.getElementById('search');\n    const searchResultsBox = document.getElementById('search-results');\n\n    if (searchBox instanceof HTMLInputElement && searchResultsBox instanceof HTMLDivElement) {\n        searchBox.addEventListener('input', (event) => handleSearch(event, searchResultsBox));\n        searchBox.addEventListener('focus', (event) => handleSearch(event, searchResultsBox));\n        searchBox.addEventListener('keydown', (event) => handleKeys(event, searchResultsBox));\n\n        document.addEventListener('focusin', (event) => {\n            const target = event.target as HTMLElement;\n\n            if (!target.matches('#search, #search-results, #search-results *')) {\n                searchResultsBox.classList.add('hidden');\n            }\n        });\n    }\n});\n"],
  "mappings": "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",
  "names": []
}
